// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[] 
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Place {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  types         String
  province      String
  amphure       String
  location      Location?
  description   String
  openingHours  OpeningHours[]
  images  PlaceImages[]
}

model Location {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId 
  lat   String
  lng   String
  placeId String @db.ObjectId @unique 
  place Place   @relation(fields: [placeId], references: [id], onDelete: Cascade)
}

model OpeningHours {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  placeId String @db.ObjectId
  day     String
  isOpen  Boolean
  open    String?
  close   String?
  place   Place  @relation(fields: [placeId], references: [id], onDelete: Cascade)

  @@unique([placeId, day])
}

model PlaceImages {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  placeId String @db.ObjectId
  url     String?

  place   Place  @relation(fields: [placeId], references: [id], onDelete: Cascade)
  @@unique([placeId, url])
}